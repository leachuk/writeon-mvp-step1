apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose-dev.yml convert
    kompose.version: 1.21.0
  creationTimestamp: null
  labels:
    io.kompose.service: redisdb
    app: bardly-api
  name: redisdb
spec:
  ports:
  - name: "6379"
    port: 6379
    targetPort: 6379
  selector:
    io.kompose.service: redisdb
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose-dev.yml convert
    kompose.version: 1.21.0
  creationTimestamp: null
  labels:
    io.kompose.service: redisdb
    app: bardly-api
  name: redisdb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redisdb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose-dev.yml convert
        kompose.version: 1.21.0
      creationTimestamp: null
      labels:
        io.kompose.service: redisdb
        app: bardly-api
    spec:
      containers:
        - image: myredis:latest
          imagePullPolicy: Never
          name: redisdb
          ports:
            - containerPort: 6379
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: redisdb-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: redisdb-claim0
          persistentVolumeClaim:
            claimName: redisdb-claim0
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: redisdb-claim0
    app: bardly-api
  name: redisdb-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
