version: '2.1'
services:
  redisdb:
#    ports:
#      - "6379:6379" #enabled for local debugging
    image: redis
    volumes:
      - "./web-volume/redis:/data"

  couchdb:
    build:
      context: .
      dockerfile: Dockerfile-couchdb
    ports:
      - "5984:5984" #enabled for couchdb sync
    image: mycouchdb-1:latest
    volumes:
      - "./web-volume/couchdb:/usr/local/var/lib/couchdb"
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=-pbkdf2-7ac683f7c830ce579c7d8e11379273c217d001a9,f089da8c612a207145f486ebf3761cd7,10
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5984"]
      interval: 10s
      timeout: 5s
      retries: 3

  web:
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
        - no_proxy
#    volumes:
#      - "./app:/src/app"
    depends_on:
      couchdb:
        condition: service_healthy
    ports:
      - "9000:9000" #disable when nginx is enabled
      - "9615:9615" #expose pm2 --web monitor port
    links:
      - "redisdb:redis"
      - "couchdb:mycouchdb-1"
    volumes:
      - "./web-volume/web:/root"
    image: writeon_web
    environment:
#      - DATADOG_HOST=datadog # used by the web app to initialize the Datadog library
      - COUCH_REPLICATION_SOURCE=${COUCH_REPLICATION_SOURCE}
      - COUCH_REPLICATION_TARGET=${COUCH_REPLICATION_TARGET}

#  nginx:
#    build:
#      context: .
#      dockerfile: Dockerfile-nginx
#    volumes:
#      - "./web-volume/letsencrypt/nginx-certs/live/bardly.net:/etc/nginx/certs/live/bardly.net"
#    links:
#        - "web:web"
#    ports:
#        - "80:80"
#        - "443:443"

  #datadog integration
#  datadog:
#      build:
#        context: .
#        dockerfile: Dockerfile-dogstatd
#      links:
#       - web # ensures that the web app can send metrics
#      environment:
#       - API_KEY=20b3ad2b6be21daf2a90bb6b4acecdb7
#       - DD_HOSTNAME=compose-datadog-alpine-prod
#      volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#       - /proc/mounts:/host/proc/mounts:ro
#       - /sys/fs/cgroup:/host/sys/fs/cgroup:ro

